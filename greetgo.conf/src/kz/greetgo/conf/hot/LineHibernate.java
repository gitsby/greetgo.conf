package kz.greetgo.conf.hot;

/**
 * Оттображает строку в файле с её значением в памяти
 */
public interface LineHibernate {
  /**
   * Полное имя строки
   *
   * @return полное имя строки
   */
  String fullName();

  /**
   * Устанавливает значение строки из файла
   *
   * @param strValue   строковое значение величины
   * @param commented индикатор закоментированности. Если он <code>true</code>, то методом {@link #fieldValue()}
   *                   будет возвращаться значение по умолчанию, но метод {@link #hasStoredValue()} будет
   *                   возвращать <code>true</code>, чтобы закоментированная строка не появилась внизу конфига
   */
  void setStoredValue(String strValue, boolean commented);

  /**
   * Если <code>true</code>, то указывает, что данный объект предоставляет значение методом {@link #fieldValue()}.
   * Иначе методом {@link #fieldValue()} пользоваться нельзя
   *
   * @return признак предоставления объектом значения
   */
  boolean isValueSource();

  /**
   * Предоставляет имя поля в интерфейсе конфига
   *
   * @return имя поля в интерфейсе конфига
   */
  String fieldName();

  /**
   * Предоставляет значение поля в интерфейсе конфига
   *
   * @return значение поля в интерфейсе конфига
   */
  Object fieldValue();

  /**
   * Индикатор того, что хранилище есть запись этого поля, и его добаляеть в конец не нужно
   *
   * @return Если <code>true</code>, то данный объект представляет строку, которая уже есть в хранилище, и добявлять
   * её в конец файла-конфига не нужно. Иначе, если {@link #hasContent()} вернёт <code>true</code> нужно добавить
   * данную строку в конец файла
   */
  boolean hasStoredValue();

  /**
   * Показывает, что данная строка имеет хранимое значение в файле конфига
   *
   * @return <code>true</code> - данная строка имеет хранимое значение в файле конфига, иначе - эта строка виртуальная
   */
  boolean hasContent();

  /**
   * Описание данного параметра
   *
   * @return описание данного параметра
   */
  String description();

  /**
   * Предоставляет значение по-умолчанию в строковом представлении
   * @return значение по-умолчанию в строковом представлении
   */
  String getStringDefaultValue();
}
